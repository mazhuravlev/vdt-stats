import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import LanguageDetector from 'i18next-browser-languagedetector';
import { LocaleOptions, addLocale, locale } from 'primereact/api'
import ru from 'primelocale/ru.json'

addLocale('ru', ru.ru as LocaleOptions)

i18n.on('languageChanged', lng => {
    switch (lng) {
        case 'en':
        case 'ru':
            locale(lng)
            console.log(`locale ${lng}`)
            break
        default: throw `invalid locale: ${lng}`
    }
})

i18n.on('initialized', options => {
    const lng = i18n.resolvedLanguage ?? options.lng ?? 'en'
    console.log(`locale ${lng}`)
    locale(lng)
})

i18n
    .use(LanguageDetector)
    .use(initReactI18next)
    .init({
        debug: true,
        fallbackLng: 'en',
        interpolation: {
            escapeValue: false,
        },
        resources: {
            en: {
                translation: {
                    search: 'Search',
                    settings: 'Settings',
                    clear: 'Clear',
                    menu: {
                        pilots: 'Pilots',
                        tracks: 'Tracks',
                        races: 'Races',
                    },
                    pilot: {
                        raceList: 'Pilot race list',
                        hideScatter: 'Hide scatter',
                        showScatter: 'Show scatter',
                        smoothing: 'Smoothing',
                        raceCount: 'Race count',
                        updateCount: 'Update count',
                        avgSeasonDelta: 'Average delta %',
                        longestStreak: 'Longest streak',
                    },
                    pilots: {
                        races: 'Races',
                        name: 'Name',
                        raceCount: 'Race count',
                        avgDelta: 'Avg. delta %',
                        totalUpdates: 'Total updates',
                        longestStreak: 'Longest streak',
                        seasonStart: 'Season start',
                        seasonEnd: 'Season end',
                    },
                    race: {
                        chartBarsSize: 'Chart bars size',
                        trackRaceList: 'üóê Track race list',
                        trackNameCopied: 'Track name copied to clipboard'
                    },
                    races: {
                        pilot: 'Pilot',
                        season: 'Season',
                        date: 'Date',
                        pilots: 'Pilots',
                        updates: 'Updates',
                        track: 'Track',
                    },
                    tracks: {
                        repeats: 'Repeats',
                        map: 'Map',
                        track: 'Track',
                        updates: 'Updates',
                    },
                }
            },
            ru: {
                translation: {
                    search: '–ü–æ–∏—Å–∫',
                    settings: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
                    clear: '–°–±—Ä–æ—Å–∏—Ç—å',
                    menu: {
                        pilots: '–ü–∏–ª–æ—Ç—ã',
                        tracks: '–¢—Ä–∞—Å—Å—ã',
                        races: '–ì–æ–Ω–∫–∏',
                    },
                    pilot: {
                        raceList: '–°–ø–∏—Å–æ–∫ –≥–æ–Ω–æ–∫ –ø–∏–ª–æ—Ç–∞',
                        daysDifference: '–†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–Ω—è—Ö',
                        hideScatter: '–°–∫—Ä—ã—Ç—å —Ç–æ—á–∫–∏',
                        showScatter: '–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ—á–∫–∏',
                        smoothing: '–°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ',
                        raceCount: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–Ω–æ–∫',
                        updateCount: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π',
                        avgSeasonDelta: '–°—Ä–µ–¥–Ω—è—è –¥–µ–ª—å—Ç–∞ % –∑–∞ —Å–µ–∑–æ–Ω',
                        longestStreak: '–ú–∞–∫—Å. –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã—Ö –¥–Ω–µ–π –≥–æ–Ω–æ–∫',
                    },
                    pilots: {
                        races: '–ì–æ–Ω–∫–∏',
                        name: '–ò–º—è',
                        raceCount: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–Ω–æ–∫',
                        avgDelta: '–°—Ä–µ–¥ –¥–µ–ª—å—Ç–∞ %',
                        totalUpdates: '–í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∑–æ–∫',
                        longestStreak: '–î–Ω–µ–π –ø–æ–¥—Ä—è–¥',
                        seasonStart: '–ù–∞—á–∞–ª–æ —Å–µ–∑–æ–Ω–∞',
                        seasonEnd: '–ö–æ–Ω–µ—Ü —Å–µ–∑–æ–Ω–∞',
                    },
                    race: {
                        chartBarsSize: '–ú–∞—Å—à—Ç–∞–± –≥—Ä–∞—Ñ–∏–∫–∞',
                        trackRaceList: 'üóê –ì–æ–Ω–∫–∏ –Ω–∞ —ç—Ç–æ–π —Ç—Ä–∞—Å—Å–µ',
                        trackNameCopied: '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–∞—Å—Å—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ',
                    },
                    races: {
                        pilot: '–ü–∏–ª–æ—Ç',
                        season: '–°–µ–∑–æ–Ω',
                        date: '–î–∞—Ç–∞',
                        pilots: '–ü–∏–ª–æ—Ç–æ–≤',
                        updates: '–ó–∞–≥—Ä—É–∑–æ–∫',
                        track: '–¢—Ä–∞—Å—Å–∞',
                    },
                    tracks: {
                        repeats: '–ü–æ–≤—Ç–æ—Ä–æ–≤',
                        map: '–ö–∞—Ä—Ç–∞',
                        track: '–¢—Ä–∞—Å—Å–∞',
                        updates: '–ó–∞–≥—Ä—É–∑–æ–∫',
                    },
                }
            }
        }
    });

export default i18n;